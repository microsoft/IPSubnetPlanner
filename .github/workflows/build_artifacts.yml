name: Build Artifacts
permissions:
  contents: read

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**/*.md'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          # Exclude Windows ARM64 (less common)
          - goos: windows
            goarch: arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.mod') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Get dependencies
      run: |
        cd src
        go mod download

    - name: Build
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        cd src
        mkdir -p ../dist
        outName=ipsubnetplanner-${{ matrix.goos }}-${{ matrix.goarch }}
        if [ "$GOOS" = "windows" ]; then
          outName="$outName.exe"
        fi
        go build -trimpath -ldflags="-s -w" -v -o ../dist/$outName
        echo "Built $outName"

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ipsubnetplanner-${{ matrix.goos }}-${{ matrix.goarch }}
        path: dist/ipsubnetplanner-${{ matrix.goos }}-${{ matrix.goarch }}*
        retention-days: 30
